l_table2[, Length := V1]
# setnames(l_table2, "is.SETOSA", "is_setosa")
l_table2
library(dplyr)
x_test <- as.data.table(st_distance(m))
x_test$row_num <- seq.int(nrow(x_test))
file_settlements_geom$row_num <- seq.int(nrow(file_settlements_geom))
join_table_distance_l <- inner_join(file_settlements_geom, x_test[ , c("V1", "row_num")])
# ?join
plot(join_table_distance_l$both, join_table_distance_l$V1)
plot(join_table_distance_l$both ~join_table_distance_l$V1, pch = 16, cex = 1.3, col = "blue", main = "Population Distribution vs Distance to transport", xlab = "Distance(m)", ylab = "Pop. Number")
lm(join_table_distance_l$both ~ join_table_distance_l$V1)
fit1 <- lm(both ~ V1, data = join_table_distance_l)
summary(fit1)
# lm(join_table_distance_l$both ~ join_table_distance_l$V1)
View(result2)
View(l_table2)
library(data.table)
l_table2 <- as.data.table(transpose(result2))
l_table2[, Length := V1]
# setnames(l_table2, "is.SETOSA", "is_setosa")
l_table2
View(l_table2)
library(dplyr)
x_test <- as.data.table(st_distance(m))
x_test$row_num <- seq.int(nrow(x_test))
file_settlements_geom$row_num <- seq.int(nrow(file_settlements_geom))
join_table_distance_l <- inner_join(file_settlements_geom, x_test[ , c("V1", "row_num")])
# ?join
plot(join_table_distance_l$both, join_table_distance_l$V1)
plot(join_table_distance_l$both ~join_table_distance_l$V1, pch = 16, cex = 1.3, col = "blue", main = "Population Distribution vs Distance to transport", xlab = "Pop. Number", ylab = "Distance(m)")
plot(join_table_distance_l$both ~join_table_distance_l$V1, pch = 16, cex = 1.3, col = "blue", main = "Population Distribution vs Distance to transport", xlab = "Distance(m)", ylab = "Pop. Number")
lm(join_table_distance_l$both ~ join_table_distance_l$V1)
plot(join_table_distance_l$both ~join_table_distance_l$V1, pch = 16, cex = 1.3, col = "blue", main = "Population Distribution vs Distance to transport", xlab = "Distance(m)", ylab = "Pop. Number")
lm(join_table_distance_l$both ~ join_table_distance_l$V1)
fit1 <- lm(both ~ V1, data = join_table_distance_l)
summary(fit1)
# lm(join_table_distance_l$both ~ join_table_distance_l$V1)
library(sf)
result1 <-st_distance(file_settlements_geom, file_motor_geom)
result2 <-st_distance(file_settlements_geom, file_cart_geom)
result3 <-st_distance(file_settlements_geom, file_walk_geom)
# st_nearest_points(file_motor_geom, file_settlements_geom)
# head(result)
l = st_connect(file_settlements_geom, file_motor_geom, ids = result1, progress = FALSE)
m = st_connect(file_settlements_geom, file_cart_geom, ids = result2, progress = FALSE)
n = st_connect(file_settlements_geom, file_walk_geom, ids = result3, progress = FALSE)
plot(l, col = NA)  # For setting the extent
View(l)
result1 <-st_distance(file_settlements_geom, file_motor_geom)
library(sf)
# result1 <-st_distance(file_settlements_geom, file_motor_geom)
# result2 <-st_distance(file_settlements_geom, file_cart_geom)
result3 <-st_distance(file_settlements_geom, file_walk_geom)
result3 %>%
mutate(
distance = st_distance(area, by_element = TRUE),
distance2 = st_distance(area, by_element = FALSE),
distance3 = st_distance(geometry, area, by_element = TRUE)
)
st_distance(file_settlements_geom, file_motor_geom)
library(sf)
result1 <-st_distance(file_settlements_geom, file_motor_geom)
result2 <-st_distance(file_settlements_geom, file_cart_geom)
result3 <-st_distance(file_settlements_geom, file_walk_geom)
# st_nearest_points(file_motor_geom, file_settlements_geom)
head(result1)
# l = st_connect(file_settlements_geom, file_motor_geom, ids = result1, progress = FALSE)
# m = st_connect(file_settlements_geom, file_cart_geom, ids = result2, progress = FALSE)
# n = st_connect(file_settlements_geom, file_walk_geom, ids = result3, progress = FALSE)
# plot(l, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_motor_geom), col = "red", add = TRUE)
# plot(l, add = TRUE)
# plot(m, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_cart_geom), col = "red", add = TRUE)
# plot(m, add = TRUE)
# plot(n, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_walk_geom), col = "red", add = TRUE)
# plot(n, add = TRUE)
library(data.table)
l_table2 <- as.data.table(transpose(result1))
x_test <- result1
library(sf)
result1 <-as.table(st_distance(file_settlements_geom, file_motor_geom))
result2 <-st_distance(file_settlements_geom, file_cart_geom)
result3 <-st_distance(file_settlements_geom, file_walk_geom)
x_test <- result1
# st_nearest_points(file_motor_geom, file_settlements_geom)
head(result1)
# l = st_connect(file_settlements_geom, file_motor_geom, ids = result1, progress = FALSE)
# m = st_connect(file_settlements_geom, file_cart_geom, ids = result2, progress = FALSE)
# n = st_connect(file_settlements_geom, file_walk_geom, ids = result3, progress = FALSE)
# plot(l, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_motor_geom), col = "red", add = TRUE)
# plot(l, add = TRUE)
# plot(m, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_cart_geom), col = "red", add = TRUE)
# plot(m, add = TRUE)
# plot(n, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_walk_geom), col = "red", add = TRUE)
# plot(n, add = TRUE)
result1 <-as.data.table(st_distance(file_settlements_geom, file_motor_geom))
library(sf)
result1 <-as.data.table(st_distance(file_settlements_geom, file_motor_geom))
result2 <-st_distance(file_settlements_geom, file_cart_geom)
result3 <-st_distance(file_settlements_geom, file_walk_geom)
x_test <- result1
# st_nearest_points(file_motor_geom, file_settlements_geom)
head(result1)
# l = st_connect(file_settlements_geom, file_motor_geom, ids = result1, progress = FALSE)
# m = st_connect(file_settlements_geom, file_cart_geom, ids = result2, progress = FALSE)
# n = st_connect(file_settlements_geom, file_walk_geom, ids = result3, progress = FALSE)
# plot(l, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_motor_geom), col = "red", add = TRUE)
# plot(l, add = TRUE)
# plot(m, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_cart_geom), col = "red", add = TRUE)
# plot(m, add = TRUE)
# plot(n, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_walk_geom), col = "red", add = TRUE)
# plot(n, add = TRUE)
View(x_test)
library(sf)
result1 <-as.data.table(st_distance(file_settlements_geom, file_motor_geom))
result2 <-st_distance(file_settlements_geom, file_cart_geom)
result3 <-st_distance(file_settlements_geom, file_walk_geom)
x_test <- result1
# st_nearest_points(file_motor_geom, file_settlements_geom)
l_table33 <- as.data.table(transpose(x_test))
# l = st_connect(file_settlements_geom, file_motor_geom, ids = result1, progress = FALSE)
# m = st_connect(file_settlements_geom, file_cart_geom, ids = result2, progress = FALSE)
# n = st_connect(file_settlements_geom, file_walk_geom, ids = result3, progress = FALSE)
# plot(l, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_motor_geom), col = "red", add = TRUE)
# plot(l, add = TRUE)
# plot(m, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_cart_geom), col = "red", add = TRUE)
# plot(m, add = TRUE)
# plot(n, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_walk_geom), col = "red", add = TRUE)
# plot(n, add = TRUE)
View(l_table33)
library(sf)
result1 <-as.data.table(st_distance(file_settlements_geom, file_motor_geom))
result2 <-st_distance(file_settlements_geom, file_cart_geom)
result3 <-st_distance(file_settlements_geom, file_walk_geom)
x_test <- result1
# st_nearest_points(file_motor_geom, file_settlements_geom)
l_table33 <- as.data.table(transpose(x_test))
l_table33_min <- apply(l_table33,2,min)
# l = st_connect(file_settlements_geom, file_motor_geom, ids = result1, progress = FALSE)
# m = st_connect(file_settlements_geom, file_cart_geom, ids = result2, progress = FALSE)
# n = st_connect(file_settlements_geom, file_walk_geom, ids = result3, progress = FALSE)
# plot(l, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_motor_geom), col = "red", add = TRUE)
# plot(l, add = TRUE)
# plot(m, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_cart_geom), col = "red", add = TRUE)
# plot(m, add = TRUE)
# plot(n, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_walk_geom), col = "red", add = TRUE)
# plot(n, add = TRUE)
library(sf)
result1 <-as.data.table(st_distance(file_settlements_geom, file_motor_geom))
result2 <-st_distance(file_settlements_geom, file_cart_geom)
result3 <-st_distance(file_settlements_geom, file_walk_geom)
x_test <- result1
# st_nearest_points(file_motor_geom, file_settlements_geom)
l_table33 <- as.data.table(transpose(x_test))
l_table33 <- apply(l_table33,2,min)
l_table33_min <- as.data.table(transpose(l_table33_min))
library(sf)
result1 <-as.data.table(st_distance(file_settlements_geom, file_motor_geom))
result2 <-st_distance(file_settlements_geom, file_cart_geom)
result3 <-st_distance(file_settlements_geom, file_walk_geom)
x_test <- result1
# st_nearest_points(file_motor_geom, file_settlements_geom)
l_table33 <- as.data.table(transpose(x_test))
l_table33 <- apply(l_table33,2,min)
l_table33_min <- as.table(transpose(l_table33_min))
l_table33 <- apply(l_table33,2,min)
apply(l_table33,2,min)
library(sf)
result1 <-as.data.table(st_distance(file_settlements_geom, file_motor_geom))
# result2 <-st_distance(file_settlements_geom, file_cart_geom)
# result3 <-st_distance(file_settlements_geom, file_walk_geom)
x_test <- result1
# st_nearest_points(file_motor_geom, file_settlements_geom)
l_table33 <- as.data.table(transpose(x_test))
# l_table33 <- apply(l_table33,2,min)
# l_table33_min <- as.table(transpose(l_table33_min))
# l = st_connect(file_settlements_geom, file_motor_geom, ids = result1, progress = FALSE)
# m = st_connect(file_settlements_geom, file_cart_geom, ids = result2, progress = FALSE)
# n = st_connect(file_settlements_geom, file_walk_geom, ids = result3, progress = FALSE)
# plot(l, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_motor_geom), col = "red", add = TRUE)
# plot(l, add = TRUE)
# plot(m, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_cart_geom), col = "red", add = TRUE)
# plot(m, add = TRUE)
# plot(n, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_walk_geom), col = "red", add = TRUE)
# plot(n, add = TRUE)
apply(l_table33,2,min)
library(sf)
result1 <-as.data.table(st_distance(file_settlements_geom, file_motor_geom))
# result2 <-st_distance(file_settlements_geom, file_cart_geom)
# result3 <-st_distance(file_settlements_geom, file_walk_geom)
x_test <- result1
# st_nearest_points(file_motor_geom, file_settlements_geom)
l_table33 <- as.data.table(transpose(x_test))
l_table33 <- apply(l_table33,2,min)
l_table33_min <- as.table(transpose(l_table33_min))
library(sf)
result1 <-as.data.table(st_distance(file_settlements_geom, file_motor_geom))
# result2 <-st_distance(file_settlements_geom, file_cart_geom)
# result3 <-st_distance(file_settlements_geom, file_walk_geom)
x_test <- result1
# st_nearest_points(file_motor_geom, file_settlements_geom)
l_table33 <- as.data.table(transpose(x_test))
l_table_min <- apply(l_table33,2,min)
# l = st_connect(file_settlements_geom, file_motor_geom, ids = result1, progress = FALSE)
# m = st_connect(file_settlements_geom, file_cart_geom, ids = result2, progress = FALSE)
# n = st_connect(file_settlements_geom, file_walk_geom, ids = result3, progress = FALSE)
# plot(l, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_motor_geom), col = "red", add = TRUE)
# plot(l, add = TRUE)
# plot(m, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_cart_geom), col = "red", add = TRUE)
# plot(m, add = TRUE)
# plot(n, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_walk_geom), col = "red", add = TRUE)
# plot(n, add = TRUE)
library(sf)
result1 <-as.data.table(st_distance(file_settlements_geom, file_motor_geom))
# result2 <-st_distance(file_settlements_geom, file_cart_geom)
# result3 <-st_distance(file_settlements_geom, file_walk_geom)
x_test <- result1
# st_nearest_points(file_motor_geom, file_settlements_geom)
l_table33 <- as.data.table(transpose(x_test))
l_table_min <- apply(l_table33,2,min)
l_min <- as.table(l_table_min)
# l = st_connect(file_settlements_geom, file_motor_geom, ids = result1, progress = FALSE)
# m = st_connect(file_settlements_geom, file_cart_geom, ids = result2, progress = FALSE)
# n = st_connect(file_settlements_geom, file_walk_geom, ids = result3, progress = FALSE)
# plot(l, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_motor_geom), col = "red", add = TRUE)
# plot(l, add = TRUE)
# plot(m, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_cart_geom), col = "red", add = TRUE)
# plot(m, add = TRUE)
# plot(n, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_walk_geom), col = "red", add = TRUE)
# plot(n, add = TRUE)
library(sf)
result1 <-as.data.table(st_distance(file_settlements_geom, file_motor_geom))
# result2 <-st_distance(file_settlements_geom, file_cart_geom)
# result3 <-st_distance(file_settlements_geom, file_walk_geom)
x_test <- result1
# st_nearest_points(file_motor_geom, file_settlements_geom)
l_table33 <- as.data.table(transpose(x_test))
l_table_min <- apply(l_table33,2,min)
l_min <- as.data.table(l_table_min)
# l = st_connect(file_settlements_geom, file_motor_geom, ids = result1, progress = FALSE)
# m = st_connect(file_settlements_geom, file_cart_geom, ids = result2, progress = FALSE)
# n = st_connect(file_settlements_geom, file_walk_geom, ids = result3, progress = FALSE)
# plot(l, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_motor_geom), col = "red", add = TRUE)
# plot(l, add = TRUE)
# plot(m, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_cart_geom), col = "red", add = TRUE)
# plot(m, add = TRUE)
# plot(n, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_walk_geom), col = "red", add = TRUE)
# plot(n, add = TRUE)
View(l_min)
library(sf)
result1 <-as.data.table(st_distance(file_settlements_geom, file_motor_geom))
# result2 <-st_distance(file_settlements_geom, file_cart_geom)
# result3 <-st_distance(file_settlements_geom, file_walk_geom)
x_test <- result1
# st_nearest_points(file_motor_geom, file_settlements_geom)
l_table33 <- as.data.table(transpose(x_test))
l_table_min <- apply(l_table33,2,min)
l <- as.data.table(l_table_min)
l = st_connect(file_settlements_geom, file_motor_geom, ids = result1, progress = FALSE)
library(sf)
result1 <-as.data.table(st_distance(file_settlements_geom, file_motor_geom))
# result2 <-st_distance(file_settlements_geom, file_cart_geom)
# result3 <-st_distance(file_settlements_geom, file_walk_geom)
x_test <- result1
# st_nearest_points(file_motor_geom, file_settlements_geom)
l_table33 <- as.data.table(transpose(x_test))
l_table_min <- apply(l_table33,2,min)
l_min <- as.data.table(l_table_min)
# l = st_connect(file_settlements_geom, file_motor_geom, ids = result1, progress = FALSE)
# m = st_connect(file_settlements_geom, file_cart_geom, ids = result2, progress = FALSE)
# n = st_connect(file_settlements_geom, file_walk_geom, ids = result3, progress = FALSE)
# plot(l, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_motor_geom), col = "red", add = TRUE)
# plot(l, add = TRUE)
# plot(m, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_cart_geom), col = "red", add = TRUE)
# plot(m, add = TRUE)
# plot(n, col = NA)  # For setting the extent
# plot(st_geometry(file_settlements_geom), col = "darkgrey", add = TRUE)
# plot(st_geometry(file_walk_geom), col = "red", add = TRUE)
# plot(n, add = TRUE)
View(l_min)
library(dplyr)
x_test <- as.data.table(st_distance(l_min))
library(dplyr)
x_test <- as.data.table(st_distance(l_min))
library(dplyr)
x_test <- l_min
x_test$row_num <- seq.int(nrow(x_test))
file_settlements_geom$row_num <- seq.int(nrow(file_settlements_geom))
join_table_distance_l <- inner_join(file_settlements_geom, x_test[ , c("V1", "row_num")])
View(l_min)
View(file_settlements_geom)
library(dplyr)
x_test <- l_min
x_test$row_num <- seq.int(nrow(x_test))
file_settlements_geom$row_num <- seq.int(nrow(file_settlements_geom))
join_table_distance_l <- inner_join(file_settlements_geom, x_test[ , c("l_table_min", "row_num")])
# ?join
plot(join_table_distance_l$both, join_table_distance_l$V1)
plot(join_table_distance_l$both ~join_table_distance_l$V1, pch = 16, cex = 1.3, col = "blue", main = "Population Distribution vs Distance to transport", xlab = "Distance(m)", ylab = "Pop. Number")
View(join_table_distance_l)
library(dplyr)
x_test <- l_min
x_test$row_num <- seq.int(nrow(x_test))
file_settlements_geom$row_num <- seq.int(nrow(file_settlements_geom))
join_table_distance_l <- inner_join(file_settlements_geom, x_test[ , c("l_table_min", "row_num")])
# ?join
plot(join_table_distance_l$both, join_table_distance_l$l_table_min)
plot(join_table_distance_l$both ~join_table_distance_l$l_table_min, pch = 16, cex = 1.3, col = "blue", main = "Population Distribution vs Distance to transport", xlab = "Distance(m)", ylab = "Pop. Number")
lm(join_table_distance_l$both ~ join_table_distance_l$l_table_min)
fit1 <- lm(both ~ l_table_min, data = join_table_distance_l)
summary(fit1)
# lm(join_table_distance_l$both ~ join_table_distance_l$V1)
plot(join_table_distance_l$both ~join_table_distance_l$l_table_min, pch = 16, cex = 1.3, col = "blue", main = "Population Distribution vs Distance to transport", xlab = "Distance(m)", ylab = "Pop. Number")
lm(join_table_distance_l$both ~ join_table_distance_l$l_table_min)
abline(lm(join_table_distance_l$both ~ join_table_distance_l$l_table_min), col = "red")
library(ggplot2)
ggplot(join_table_distance_l, aes(x = join_table_distance_l$both, y = join_table_distance_l$V1)) + geom_point + stat_smooth(method = "lm", col = "red")
library(ggplot2)
plot(fit1, which=3)
# fit1 <- lm(both ~ V1, data = join_table_distance_l)
# summary(fit1)
# # lm(join_table_distance_l$both ~ join_table_distance_l$V1)
library(ggplot2)
plot(fit1, which=3)
resids<-residuals(fit1)
colours <- c("dark blue", "blue", "red", "dark red")
# fit1 <- lm(both ~ V1, data = join_table_distance_l)
# summary(fit1)
# # lm(join_table_distance_l$both ~ join_table_distance_l$V1)
library(ggplot2)
plot(fit1, which=3)
resids<-residuals(fit1)
colours <- c("dark blue", "blue", "red", "dark red")
map.resids <- SpatialPointsDataFrame(data=data.frame(resids), coords=cbind(x,y))
View(join_table_distance_l)
library(ggplot2)
plot(fit1, which=3)
resids<-residuals(fit1)
colours <- c("dark blue", "blue", "red", "dark red")
map.resids <- SpatialPointsDataFrame(data=data.frame(resids), coords=cbind(newpoint_x,newpoint_y))
library(ggplot2)
plot(fit1, which=3)
resids<-residuals(fit1)
colours <- c("dark blue", "blue", "red", "dark red")
map.resids <- SpatialPointsDataFrame(data=data.frame(resids), coords=cbind(x,y))
library(spgwr)
# library(spgwr)
install.package('spgwr')
# library(spgwr)
instal.package('spgwr')
# library(spgwr)
install.package("spgwr")
install.package("spgwr")
install.packages("spgwr")
library(spgwr)
library(ggplot2)
library(maptools)
# plot(fit1, which=3)
# resids<-residuals(fit1)
# colours <- c("dark blue", "blue", "red", "dark red")
# map.resids <- SpatialPointsDataFrame(data=data.frame(resids), coords=cbind(x,y))
# spplot(map.resids, cuts=quantile(resids), col.regions=colours, cex=1)
# # fit1 <- lm(both ~ V1, data = join_table_distance_l)
# # summary(fit1)
# # # lm(join_table_distance_l$both ~ join_table_distance_l$V1)
library(spgwr)
library(ggplot2)
library(maptools)
plot(fit1, which=3)
# resids<-residuals(fit1)
# colours <- c("dark blue", "blue", "red", "dark red")
# map.resids <- SpatialPointsDataFrame(data=data.frame(resids), coords=cbind(x,y))
# spplot(map.resids, cuts=quantile(resids), col.regions=colours, cex=1)
# # fit1 <- lm(both ~ V1, data = join_table_distance_l)
# # summary(fit1)
# # # lm(join_table_distance_l$both ~ join_table_distance_l$V1)
library(spgwr)
library(ggplot2)
library(maptools)
# plot(fit1, which=3)
resids<-residuals(fit1)
# colours <- c("dark blue", "blue", "red", "dark red")
# map.resids <- SpatialPointsDataFrame(data=data.frame(resids), coords=cbind(x,y))
# spplot(map.resids, cuts=quantile(resids), col.regions=colours, cex=1)
# # fit1 <- lm(both ~ V1, data = join_table_distance_l)
# # summary(fit1)
# # # lm(join_table_distance_l$both ~ join_table_distance_l$V1)
library(spgwr)
library(ggplot2)
library(maptools)
# plot(fit1, which=3)
resids<-residuals(fit1)
colours <- c("dark blue", "blue", "red", "dark red")
map.resids <- SpatialPointsDataFrame(data=data.frame(resids), coords=cbind(x,y))
library(spgwr)
library(ggplot2)
library(maptools)
# plot(fit1, which=3)
resids<-residuals(fit1)
colours <- c("dark blue", "blue", "red", "dark red")
map.resids <- SpatialPointsDataFrame(data=data.frame(resids), coords=cbind(newpoint_x,newpoint_y))
library(spgwr)
library(ggplot2)
library(maptools)
# plot(fit1, which=3)
resids<-residuals(fit1)
colours <- c("dark blue", "blue", "red", "dark red")
map.resids <- SpatialPointsDataFrame(data=data.frame(join_table_distance_l), coords=cbind(newpoint_x,newpoint_y))
library(spgwr)
library(ggplot2)
library(maptools)
# plot(fit1, which=3)
resids<-residuals(fit1)
colours <- c("dark blue", "blue", "red", "dark red")
map.resids <- SpatialPointsDataFrame(data=data.frame(join_table_distance_l), coords=geometry())
library(spgwr)
library(ggplot2)
library(maptools)
# plot(fit1, which=3)
resids<-residuals(fit1)
colours <- c("dark blue", "blue", "red", "dark red")
map.resids <- SpatialPointsDataFrame(data=data.frame(join_table_distance_l), coords=c("newpoint_x,", "newpoint_y"))
library(spgwr)
library(ggplot2)
library(maptools)
# plot(fit1, which=3)
resids<-residuals(fit1)
colours <- c("dark blue", "blue", "red", "dark red")
map.resids <- SpatialPointsDataFrame(data=data.frame(join_table_distance_l), coords=cbind("newpoint_x","newpoint_y"))
library(spgwr)
library(ggplot2)
library(maptools)
# plot(fit1, which=3)
resids<-residuals(fit1)
colours <- c("dark blue", "blue", "red", "dark red")
map.resids <- SpatialPointsDataFrame(data=data.frame(join_table_distance_l), coords=cbindas.numeric(("newpoint_x","newpoint_y"))
library(spgwr)
library(ggplot2)
library(maptools)
# plot(fit1, which=3)
resids<-residuals(fit1)
colours <- c("dark blue", "blue", "red", "dark red")
map.resids <- SpatialPointsDataFrame(data=data.frame(join_table_distance_l), coords=cbind(as.numeric("newpoint_x"),as.numeric("newpoint_y"))
# spplot(map.resids, cuts=quantile(resids), col.regions=colours, cex=1)
# # fit1 <- lm(both ~ V1, data = join_table_distance_l)
# # summary(fit1)
# # # lm(join_table_distance_l$both ~ join_table_distance_l$V1)
library(spgwr)
library(ggplot2)
library(maptools)
# plot(fit1, which=3)
resids<-residuals(fit1)
colours <- c("dark blue", "blue", "red", "dark red")
map.resids <- SpatialPointsDataFrame(data=data.frame(join_table_distance_l), coords=cbind(as.numeric("newpoint_x"), as.numeric("newpoint_y")))
